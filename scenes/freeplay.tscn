[gd_scene load_steps=18 format=2]

[ext_resource path="res://scenes/cells/broken_cell.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/actors/simon.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/actors/unknown.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/scripts/freeplay.gd" type="Script" id=4]
[ext_resource path="res://assets/fonts/Daydream.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://scenes/typing/typing_game.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/cells/classroom_cell.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/cells/locker_cell_2.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/scripts/cell_manager.gd" type="Script" id=9]
[ext_resource path="res://assets/scripts/opponent.gd" type="Script" id=10]

[sub_resource type="DynamicFont" id=1]
font_data = ExtResource( 5 )

[sub_resource type="Shader" id=6]
code = "/*
	Glitch Effect Shader by Yui Kinomoto @arlez80

	MIT License
*/

shader_type canvas_item;

// 振動の強さ
uniform float shake_power = 0.03;
// 振動率
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
// 振動速度
uniform float shake_speed = 5.0;
// 振動ブロックサイズ
uniform float shake_block_size = 30.5;
// 色の分離率
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
	float enable_shift = float(
		random( trunc( TIME * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = SCREEN_UV;
	fixed_uv.x += (
		random(
			( trunc( SCREEN_UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = textureLod( SCREEN_TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(
		pixel_color.r
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b
	,	enable_shift
	);
	COLOR = pixel_color;
}
"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/shake_power = 0.03
shader_param/shake_rate = 0.005
shader_param/shake_speed = 1.5
shader_param/shake_block_size = 20.0
shader_param/shake_color_rate = 0.01

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 color : hint_color;
uniform float multiplier = 0.2;
uniform float softness = 3.0;

void fragment(){
	float value = distance(UV, vec2(0.5));
	COLOR = vec4(color.rgb, smoothstep(multiplier, softness, value));
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/color = null
shader_param/multiplier = 0.2
shader_param/softness = 1.0

[sub_resource type="Animation" id=2]
resource_name = "begin_game"
length = 5.0
tracks/0/type = "value"
tracks/0/path = NodePath("Intro/Label:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ "start", "3", "2", "1", "Begin!" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Intro/Label:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Intro/ColorRect:color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 3, 4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0.501961 ), Color( 0, 0, 0, 0.501961 ), Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "waiting"
tracks/0/type = "value"
tracks/0/path = NodePath("Intro/ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0.67451 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Intro/Label:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "ready?" ]
}

[node name="FreePlay" type="Node2D"]
script = ExtResource( 4 )

[node name="CellManager" type="Node2D" parent="."]
script = ExtResource( 9 )
walking = false

[node name="Cells" type="Node2D" parent="CellManager"]

[node name="Cell1" type="Node2D" parent="CellManager/Cells"]

[node name="BrokenCell" parent="CellManager/Cells/Cell1" instance=ExtResource( 1 )]

[node name="Cell2" type="Node2D" parent="CellManager/Cells"]
position = Vector2( 240, 0 )

[node name="LockerCell Type 2" parent="CellManager/Cells/Cell2" instance=ExtResource( 8 )]

[node name="Cell3" type="Node2D" parent="CellManager/Cells"]
position = Vector2( 480, 0 )

[node name="ClassCell" parent="CellManager/Cells/Cell3" instance=ExtResource( 7 )]

[node name="Simon" parent="." instance=ExtResource( 2 )]

[node name="AnimatedSprite" parent="Simon" index="0"]
frame = 1

[node name="Challenger" type="Node2D" parent="."]
position = Vector2( 186, 70 )
script = ExtResource( 10 )

[node name="Unknown" parent="Challenger" instance=ExtResource( 3 )]
position = Vector2( 0, 0 )

[node name="AnimatedSprite" parent="Challenger/Unknown" index="0"]
frame = 2
flip_h = true

[node name="TypeHandler" parent="." instance=ExtResource( 6 )]

[node name="Intro" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="Intro"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0.501961 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Intro"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -76.5
margin_top = -11.0
margin_right = 76.5
margin_bottom = 11.0
custom_fonts/font = SubResource( 1 )
text = "start"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Glitch" type="ColorRect" parent="Intro"]
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ShaderEffects" type="ColorRect" parent="Intro"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/begin_game = SubResource( 2 )
anims/waiting = SubResource( 3 )

[connection signal="defeated" from="Challenger" to="." method="_on_Challenger_defeated"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]

[editable path="Simon"]
[editable path="Challenger/Unknown"]
